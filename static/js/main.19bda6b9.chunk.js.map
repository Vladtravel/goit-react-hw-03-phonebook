{"version":3,"sources":["components/ContactForm/ContactForm.js","components/ContactsList/ContactItem/ContactItem.js","components/ContactsList/ContactsList.js","components/Filter/Filter.js","App.js","reportWebVitals.js","index.js","components/ContactsList/ContactItem/ContactItem.module.css"],"names":["ContactForm","state","name","number","onSubmit","e","preventDefault","props","formReset","setState","onChange","currentTarget","value","this","type","pattern","title","required","Component","ContactItem","contacts","onDeleteClick","map","id","className","styles","contacts_item","contacts_item_button","onClick","ContactsList","Filter","onFilter","placeholder","App","filter","onDeleteContactClick","prevState","i","onFilterInput","onFilterChange","toLowerCase","includes","onFormSubmit","contact","shortid","generate","some","alert","container","React","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.19bda6b9.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass ContactForm extends Component {\n  static propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n  };\n\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n\n  onSubmit = (e) => {\n    e.preventDefault();\n    this.props.onSubmit(this.state);\n    this.formReset();\n  };\n\n  formReset = () => {\n    this.setState({ name: \"\", number: \"\" });\n  };\n\n  onChange = (e) => {\n    this.setState({ [e.currentTarget.name]: e.currentTarget.value });\n  };\n\n  render() {\n    const { name, number } = this.state;\n    return (\n      <form onSubmit={this.onSubmit}>\n        <label>\n          Name:\n          <input\n            type=\"text\"\n            onChange={this.onChange}\n            value={name}\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n          />\n        </label>\n        <label>\n          Number:\n          <input\n            type=\"tel\"\n            value={number}\n            onChange={this.onChange}\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n          />\n        </label>\n        <button type=\"submit\" onSubmit={this.onSubmit}>\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nexport default ContactForm;\n","import React from \"react\";\nimport styles from \"./ContactItem.module.css\";\nconst ContactItem = ({ contacts, onDeleteClick }) =>\n  contacts.map(({ id, name, number }) => {\n    return (\n      <li key={id} className={styles.contacts_item}>\n        {name}: {number}\n        <button\n          className={styles.contacts_item_button}\n          onClick={() => onDeleteClick(id)}\n          type=\"button\"\n        >\n          Delete\n        </button>\n      </li>\n    );\n  });\n\nexport default ContactItem;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport ContactItem from \"./ContactItem\";\n\nconst ContactsList = ({ contacts, onDeleteClick }) => (\n  <ul>\n    <ContactItem contacts={contacts} onDeleteClick={onDeleteClick} />\n  </ul>\n);\n\nContactsList.propTypes = {\n  contacts: PropTypes.array.isRequired,\n  onDeleteClick: PropTypes.func.isRequired,\n};\n\nexport default ContactsList;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Filter = ({ value, onFilter }) => {\n  return (\n    <input type=\"text\" value={value} placeholder=\"Filter\" onChange={onFilter} />\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onFilter: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import React from \"react\";\nimport shortid from \"shortid\";\nimport ContactForm from \"./components/ContactForm\";\nimport ContactsList from \"./components/ContactsList\";\nimport Filter from \"./components/Filter\";\nimport styles from \"./App.css\";\n\nclass App extends React.Component {\n  state = {\n    contacts: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n    filter: \"\",\n  };\n\n  onDeleteContactClick = (id) => {\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter((i) => i.id !== id),\n    }));\n  };\n\n  onFilterInput = (e) => {\n    const value = e.currentTarget.value;\n    this.setState({ filter: value });\n  };\n\n  onFilterChange = () => {\n    const { contacts, filter } = this.state;\n    return contacts.filter((i) =>\n      i.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n\n  onFormSubmit = ({ name, number }) => {\n    const { contacts } = this.state;\n    const contact = {\n      id: shortid.generate(),\n      name,\n      number,\n    };\n    contacts.some((i) => i.name === name)\n      ? alert(`${name} is already in contacts`)\n      : this.setState(({ contacts }) => ({\n          contacts: [contact, ...contacts],\n        }));\n  };\n\n  render() {\n    const contacts = this.onFilterChange();\n    const { filter } = this.state;\n    return (\n      <div className={styles.container}>\n        <h1>Phonebook</h1>\n        <ContactForm onSubmit={this.onFormSubmit} />\n        <h2>Contacts</h2>\n        <Filter value={filter} onFilter={this.onFilterInput} />\n        <ContactsList\n          contacts={contacts}\n          onDeleteClick={this.onDeleteContactClick}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts_item_button\":\"ContactItem_contacts_item_button__OROEB\"};"],"sourceRoot":""}